#
#   Â© Copyright 2020 Hewlett Packard Enterprise Development LP
#
#   This file was auto-generated by the Python SDK generator; DO NOT EDIT.
#

from ..resource import Resource, Collection
from ..exceptions import NimOSAPIOperationUnsupported

class Role(Resource):
    """
    Retrieve roles and privileges for role-based access control.

    Parameters:
    - id                      : Identifier for role.
    - name                    : Name of role.
    - full_name               : Full name of role.
    - description             : Description of role.
    - privilege_list          : List of privileges for this role.
    - extended_privilege_list : List of extended privileges for this role.
    - creation_time           : Time when this role was created.
    - last_modified           : Time when this role was last modified.
    - hidden                  : Indicate whether the role is hidden.
    """

    def validate_rbac(self, object_type, op_type, tag=None):
        """
        Validate whether a particular operation is allowed on an object by role. Can be called by all roles.

        Parameters:
        - object_type : SM object type.
        - op_type     : SM operation type.
        - tag         : Tag to lookup extended privilege list for RBAC.
        """

        return self.collection.validate_rbac(self.id, object_type, op_type, tag)

    def delete(self, **kwargs):
        raise NimOSAPIOperationUnsupported("delete operation not supported")

    def update(self, **kwargs):
        raise NimOSAPIOperationUnsupported("update operation not supported")

class RoleList(Collection):
    resource = Role
    resource_type = "roles"

    def validate_rbac(self, object_type, op_type, tag=None):
        """
        Validate whether a particular operation is allowed on an object by role. Can be called by all roles.

        Parameters:
        - object_type : SM object type.
        - op_type     : SM operation type.
        - tag         : Tag to lookup extended privilege list for RBAC.
        """

        return self._client.perform_resource_action(self.resource_type, id, 'validate_rbac', object_type=object_type, op_type=op_type, tag=tag)

    def create(self, **kwargs):
        raise NimOSAPIOperationUnsupported("create operation not supported")

    def delete(self, **kwargs):
        raise NimOSAPIOperationUnsupported("delete operation not supported")

    def update(self, **kwargs):
        raise NimOSAPIOperationUnsupported("update operation not supported")
